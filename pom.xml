<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.github.ardoco.core</groupId>
        <artifactId>parent</artifactId>
        <version>0.42.0-SNAPSHOT</version>
    </parent>
    <artifactId>parent-lissa</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>ArDoCo (Core) - The Consistency Analyzer: LiSSA</name>
    <description>The goal of this project is to connect architecture documentation and models while identifying missing
        or deviating elements (inconsistencies). An element can be any representable item of the model, like a component
        or a relation. To do so, we first create trace links and then make use of them and other information to identify
        inconsistencies. ArDoCo is actively developed by researchers of the Modelling for Continuous Software
        Engineering (MCSE) group of KASTEL - Institute of Information Security and Dependability at the KIT.
        This work was supported by funding from the topic Engineering Secure Systems of the Helmholtz Association (HGF)
        and by KASTEL Security Research Labs
        (46.23.01).
    </description>
    <url>https://github.com/ArDoCo/LiSSA</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>Hossiphi</id>
            <name>Sophie Corallo</name>
            <email>sophie.corallo@kit.edu</email>
            <url>https://mcse.kastel.kit.edu/staff_sophie_corallo.php</url>
            <organization>KASTEL</organization>
            <organizationUrl>https://mcse.kastel.kit.edu/</organizationUrl>
            <timezone>GMT+1</timezone>
        </developer>
        <developer>
            <id>dfuchss</id>
            <name>Dominik Fuchss</name>
            <email>dominik.fuchss@kit.edu</email>
            <url>https://mcse.kastel.kit.edu/staff_dominik_fuchss.php</url>
            <organization>KASTEL</organization>
            <organizationUrl>https://mcse.kastel.kit.edu/</organizationUrl>
            <timezone>GMT+1</timezone>
        </developer>
        <developer>
            <id>Gram21</id>
            <name>Jan Keim</name>
            <email>jan.keim@kit.edu</email>
            <url>https://mcse.kastel.kit.edu/staff_Keim_Jan.php</url>
            <organization>KASTEL</organization>
            <organizationUrl>https://mcse.kastel.kit.edu/</organizationUrl>
            <timezone>GMT+1</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/ArDoCo/LiSSA.git</connection>
        <developerConnection>scm:git:ssh://github.com:ArDoCo/LiSSA.git</developerConnection>
        <tag>HEAD</tag>
        <url>http://github.com/ArDoCo/LiSSA/tree/main</url>
    </scm>
    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/ArDoCo/LiSSA/issues</url>
    </issueManagement>
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <revision>0.42.0-SNAPSHOT</revision>
        <ardoco.version>${revision}</ardoco.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.source.encoding>UTF-8</project.source.encoding>

        <!-- Kotlin -->
        <kotlin.code.style>official</kotlin.code.style>
        <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
        <kotlin.version>1.9.22</kotlin.version>

        <sonar.projectKey>ArDoCo_LiSSA</sonar.projectKey>
        <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>
        <sonar.organization>ardoco</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../${aggregate.report.dir},
            ${project.basedir}/../../${aggregate.report.dir}
        </sonar.coverage.jacoco.xmlReportPaths>
        <aggregate.report.dir>report/target/site/jacoco-aggregate/jacoco.xml</aggregate.report.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_core</artifactId>
            <version>${error-prone.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test-junit5</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-kotlin</artifactId>
                <version>${jackson.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>mavenCentral</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>mavenSnapshot</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless.version}</version>
                    <configuration>
                        <formats>
                            <format>
                                <includes>
                                    <include>*.md</include>
                                    <include>.gitignore</include>
                                </includes>
                                <trimTrailingWhitespace />
                                <endWithNewline />
                                <indent>
                                    <tabs>true</tabs>
                                    <spacesPerTab>4</spacesPerTab>
                                </indent>
                            </format>
                        </formats>
                        <!-- define a language-specific format -->
                        <java>
                            <eclipse>
                                <!--suppress UnresolvedMavenProperty -->
                                <file>${maven.multiModuleProjectDirectory}/formatter.xml</file>
                            </eclipse>
                            <removeUnusedImports />
                            <licenseHeader>
                                <!--suppress UnresolvedMavenProperty -->
                                <file>${maven.multiModuleProjectDirectory}/license-header</file>
                            </licenseHeader>
                            <importOrder>
                                <!--suppress UnresolvedMavenProperty -->
                                <file>${maven.multiModuleProjectDirectory}/spotless.importorder</file>
                            </importOrder>
                        </java>
                        <pom>
                            <sortPom>
                                <encoding>UTF-8</encoding>
                                <keepBlankLines>true</keepBlankLines>
                                <indentBlankLines>false</indentBlankLines>
                                <nrOfIndentSpace>2</nrOfIndentSpace>
                                <expandEmptyElements>false</expandEmptyElements>
                                <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                                <sortDependencies>groupId,artifactId</sortDependencies>
                                <sortDependencyExclusions>groupId,artifactId</sortDependencyExclusions>
                                <sortDependencyManagement>groupId,artifactId</sortDependencyManagement>
                                <sortPlugins>groupId,artifactId</sortPlugins>
                                <sortProperties>false</sortProperties>
                                <sortModules>true</sortModules>
                                <sortExecutions>true</sortExecutions>
                                <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
                            </sortPom>
                        </pom>
                        <kotlin>
                            <ktlint>
                                <editorConfigPath>.editorconfig</editorConfigPath>
                            </ktlint>
                        </kotlin>
                        <ratchetFrom>origin/main</ratchetFrom>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>

                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>

                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>

                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>

                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>ossrh</serverId>
                        <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
            </plugin>
            <!-- Kotlin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sources>
                                <source>src/main/java</source>
                                <source>src/main/kotlin</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-source</id>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <sources>
                                <source>src/test/java</source>
                                <source>src/test/kotlin</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>1.9.10</version>
                <configuration>
                    <failOnWarning>false</failOnWarning>
                    <reportUndocumented>false</reportUndocumented>
                    <skipEmptyPackages>true</skipEmptyPackages>
                    <documentedVisibilities>
                        <visibility>PUBLIC</visibility>
                        <visibility>PROTECTED</visibility>
                    </documentedVisibilities>
                </configuration>
                <executions>
                    <execution>
                        <id>dokka:javadoc</id>
                        <goals>
                            <goal>javadocJar</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>dokka:pre-site</id>
                        <goals>
                            <goal>dokka</goal>
                        </goals>
                        <phase>pre-site</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>

            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>

            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>deployment</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>stages-lissa</module>
                <module>pipeline-erid</module>
                <module>pipeline-lissa</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <keyname>2673EE7DF64D33426A93D642E88F0DA2FB06A126</keyname>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <version>${kotlin.version}</version>
                        <executions>
                            <execution>
                                <id>compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                            <execution>
                                <id>test-compile</id>
                                <goals>
                                    <goal>test-compile</goal>
                                </goals>
                                <phase>test-compile</phase>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>complete</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>stages-lissa</module>
                <module>pipeline-erid</module>
                <module>pipeline-lissa</module>
                <module>tests</module>
                <module>report</module>
            </modules>
        </profile>
    </profiles>
</project>
